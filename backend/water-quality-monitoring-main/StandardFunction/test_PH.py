import unittest
from PH import pH, cleaner
from main import main_runner

class TestAddFunction(unittest.TestCase):
    coordinates = [[73.6472229107984, 20.04490099327118], [73.6527160748609, 20.041514436506176], [73.65752259341559, 20.042159500567656], [73.6607841595777, 20.041191903481952]]

    def test_name(self):
        self.assertEqual(main_runner(parameter= "PH", coordinates= self.coordinates, start_date= "2000-01-01", end_date= "2025-02-20", name= "gangapur_dam"), {'2024-11-02': 7.412927358438822, '2024-11-04': 7.447119026472731, '2024-11-07': 7.428388357659839, '2024-11-09': 7.471763942130583, '2024-11-12': 7.465779423549749, '2024-11-14': 7.369816068115542, '2024-11-17': 7.437348702260885, '2024-11-19': 7.406728884263565, '2024-11-22': 7.4376480552907545, '2024-11-24': 7.4398707420064, '2024-11-27': 7.45109705446571, '2024-11-29': 7.4138578714254155, '2024-12-02': 7.2177616081842055, '2024-12-12': 7.408035595068032, '2024-12-14': 7.411600438218968, '2024-12-17': 7.459288860086783, '2024-12-19': 7.358518856116446, '2024-12-22': 7.278828818644565, '2024-12-27': 7.489291376912927, '2024-12-29': 7.329051922497267})


    # def test_pH(self):
    #     self.assertEqual(main_runner(parameter= "PH", coordinates= self.coordinates, start_date= "2024-11-01", end_date= "2025-01-01"), {'2024-11-02': 7.412927358438822, '2024-11-04': 7.447119026472731, '2024-11-07': 7.428388357659839, '2024-11-09': 7.471763942130583, '2024-11-12': 7.465779423549749, '2024-11-14': 7.369816068115542, '2024-11-17': 7.437348702260885, '2024-11-19': 7.406728884263565, '2024-11-22': 7.4376480552907545, '2024-11-24': 7.4398707420064, '2024-11-27': 7.45109705446571, '2024-11-29': 7.4138578714254155, '2024-12-02': 7.2177616081842055, '2024-12-12': 7.408035595068032, '2024-12-14': 7.411600438218968, '2024-12-17': 7.459288860086783, '2024-12-19': 7.358518856116446, '2024-12-22': 7.278828818644565, '2024-12-27': 7.489291376912927, '2024-12-29': 7.329051922497267})


    def test_cleaner(self):
        self.assertEqual(cleaner({'2024-11-02': 7.412927358438822, '2024-11-04': 7.447119026472731, '2024-11-07': 7.428388357659839, '2024-11-09': 7.471763942130583, '2024-11-12': 7.465779423549749, '2024-11-14': 7.369816068115542, '2024-11-17': 7.437348702260885, '2024-11-19': 7.406728884263565, '2024-11-22': 7.4376480552907545, '2024-11-24': 7.4398707420064, '2024-11-27': 7.45109705446571, '2024-11-29': 7.4138578714254155, '2024-12-02': 7.2177616081842055, '2024-12-12': 7.408035595068032, '2024-12-14': 7.411600438218968, '2024-12-17': 7.459288860086783, '2024-12-19': 7.358518856116446, '2024-12-22': 7.278828818644565, '2024-12-27': 7.489291376912927, '2024-12-29': 7.329051922497267}), {'2024-11-02': 7.412927358438822, '2024-11-04': 7.447119026472731, '2024-11-07': 7.428388357659839, '2024-11-09': 7.471763942130583, '2024-11-12': 7.465779423549749, '2024-11-14': 7.369816068115542, '2024-11-17': 7.437348702260885, '2024-11-19': 7.406728884263565, '2024-11-22': 7.4376480552907545, '2024-11-24': 7.4398707420064, '2024-11-27': 7.45109705446571, '2024-11-29': 7.4138578714254155, '2024-12-02': 7.2177616081842055, '2024-12-12': 7.408035595068032, '2024-12-14': 7.411600438218968, '2024-12-17': 7.459288860086783, '2024-12-19': 7.358518856116446, '2024-12-22': 7.278828818644565, '2024-12-27': 7.489291376912927, '2024-12-29': 7.329051922497267})


if __name__ == '__main__':
    unittest.main()